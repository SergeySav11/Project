'''
Как и Сортировка выбором, этот алгоритм сегментирует список на отсортированные и несортированные части. Он перебирает не
сортированный сегмент и вставляет просматриваемый элемент в правильную позицию отсортированного списка.


Объяснение
Предполагается, что первый элемент списка отсортирован. Затем мы переходим к следующему элементу, назовем его х.
Если x больше первого элемента, мы оставляем его как есть. Если x меньше, мы копируем значение первого элемента во вторую
позицию и затем устанавливаем первый элемент в x.

Когда мы переходим к другим элементам несортированного сегмента, мы непрерывно перемещаем более крупные элементы в
]отсортированном сегменте вверх по списку, пока не встретим элемент меньше x, или не достигнем конца отсортированного
сегмента, а затем поместим x в его правильное положение.
'''


def insertion_sort(nums):
    for i in range(1,len(nums)): 2
        x = nums[i] 1
        a = i - 1  1
        while a >= 0 and nums[a] > x:
            nums[a + 1] = nums[a]
            a -= 1 0
        nums[a + 1] = x

nums = [2,6,1,9,9,10,-5,-4]
insertion_sort(nums)
print(nums)